#!/bin/bash
#
# About: Auto Update
# Author: liberodark
# Thanks :
# License: GNU GPLv3

version="0.0.1"

echo "Welcome on Auto Update Script $version"

#=================================================
# CHECK ROOT
#=================================================

if [[ $(id -u) -ne 0 ]] ; then echo "Please run as root" ; exit 1 ; fi

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST AND VAR
#=================================================

distribution=$(cat /etc/*release | grep "PRETTY_NAME" | sed 's/PRETTY_NAME=//g' | sed 's/["]//g' | awk '{print $1}')

update="/usr/bin/check_updates"
yum_conf="/etc/yum.repos.d/CentOS-Base.repo"
temp=$(mktemp)
lock="/tmp/auto-update.lock"

exec 9>"${lock}"
flock -n 9 || exit

detect_update(){
if [ -e "$update" ]; then
echo "Error check_updates is not installed correctly"
ln -s /usr/local/nagios/libexec/check_updates /usr/bin/check_updates
fi
}

detect_yum_repo(){
if [ -e "$yum_conf" ]; then
echo "Error Yum configuration already is installed"
mv /etc/yum.repos.d/* "$temp"
cd /etc/yum.repos.d/ || exit
wget http://10.17.32.24/repo/repo.tar.gz
tar -xvf repo.tar.gz && rm -f repo.tar.gz
fi
}

stop_service(){
systemctl stop nrpe > /dev/null 2>&1
systemctl stop docker > /dev/null 2>&1
systemctl stop dockerd > /dev/null 2>&1
systemctl stop httpd > /dev/null 2>&1
systemctl stop apache2 > /dev/null 2>&1
systemctl stop mariadb > /dev/null 2>&1
systemctl stop mysql > /dev/null 2>&1
systemctl stop mysqld > /dev/null 2>&1
systemctl stop postgres > /dev/null 2>&1
}

make_update(){
if [ "$distribution" = "CentOS" ] || [ "$distribution" = "Red\ Hat" ] || [ "$distribution" = "Oracle" ]; then
  detect_update || exit
  detect_yum_repo || exit
  stop_service || exit
  check_updates -lock /tmp/check_updates.lock -update -y
  reboot
      
elif [ "$distribution" = "Fedora" ]; then
  detect_update || exit
  stop_service || exit
  check_updates -lock /tmp/check_updates.lock -update -y
  reboot
    
elif [ "$distribution" = "Debian" ] || [ "$distribution" = "Raspbian" ] || [ "$distribution" = "Ubuntu" ] || [ "$distribution" = "Deepin" ]; then
  detect_update || exit
  stop_service || exit
  check_updates -lock /tmp/check_updates.lock -update -y
  reboot
fi
}

make_update || exit
